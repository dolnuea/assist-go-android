plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'//twilio voice
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.assistgoandroid"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libenv-jni.so'
        pickFirst 'lib/x86_64/libenv-jni.so'
        pickFirst 'lib/armeabi-v7a/libenv-jni.so'
        pickFirst 'lib/x86/libenv-jni.so'

        pickFirst 'lib/arm64-v8a/libconcealjni.so'
        pickFirst 'lib/x86_64/libconcealjni.so'
        pickFirst 'lib/armeabi-v7a/libconcealjni.so'
        pickFirst 'lib/armeabi/libconcealjni.so'
        pickFirst 'lib/x86/libconcealjni.so'

        pickFirst 'lib/arm64-v8a/libfb.so'
        pickFirst 'lib/x86_64/libfb.so'
        pickFirst 'lib/armeabi-v7a/libfb.so'
        pickFirst 'lib/armeabi/libfb.so'
        pickFirst 'lib/x86/libfb.so'

        pickFirst 'lib/arm64-v8a/libtwilio_video_android_so.so'
        pickFirst 'lib/x86_64/libtwilio_video_android_so.so'
        pickFirst 'lib/armeabi-v7a/libtwilio_video_android_so.so'
        pickFirst 'lib/x86/libtwilio_video_android_so.so'

        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    // Specify that we want to split up the APK based on ABI
    splits {
        abi {
            // Enable ABI split
            enable true

            // Clear list of ABIs
            reset()

            // Specify each architecture currently supported by the Video SDK
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specify that we do not want an additional universal SDK
            universalApk false
        }
    }

    flavorDimensions "environment"
    productFlavors {

        community {
            dimension "environment"
            applicationId "com.twilio.video.app.community"
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"production"'
            buildConfigField("String",
                    "TWILIO_ACCESS_TOKEN",
                    "\"${getLocalProperty("TWILIO_ACCESS_TOKEN")}\"")
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation project(path: ':twilio-video-app-android')
    implementation project(path: ':twilio-video-app-android')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.github.florent37:singledateandtimepicker:2.2.7' //For datetime picker
    implementation 'com.github.bumptech.glide:glide:4.12.0' // Glide for remote image loading
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'jp.wasabeef:glide-transformations:4.1.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    //qr code dependencies
    def camerax_version = "1.0.2"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha27"
    implementation 'com.google.zxing:core:3.3.0'
    //implementation 'com.dynamsoft:dynamsoftcameraenhancer:2.1.0@aar'
    //end of qr code dependencies

    //twilio video
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation "com.twilio:video-android-ktx:7.1.0"
    implementation "com.twilio.sdk:twilio:7.17.7"
    //Need to have because something related to guava causing build error
    implementation 'com.google.guava:guava:27.0.1-android'

    //

    //android phone
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    //

    implementation 'com.google.android.material:material:1.5.0'

    //Json
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.6'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.6'
    implementation 'com.codepath.libraries:asynchttpclient:2.2.0'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.1.0'

    implementation 'com.google.firebase:firebase-core:20.1.2'
    implementation 'com.google.firebase:firebase-messaging:23.0.3'

    implementation 'com.google.firebase:firebase-messaging:+'
    implementation 'com.google.firebase:firebase-iid:+'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.3.1')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'

    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    implementation project(path: ':twilio-video-app-android')

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

def getLocalProperty(key) {
    if (project.rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def value = properties.getProperty(key)
        return value
    } else {
        logger.log(LogLevel.WARN, "Could not find local.properties in " +
                project.rootProject.toString() + ". Community variant cannot connect to room" +
                " without credentials")
    }
}